{"version":3,"sources":["pages/login/index.less","pages/login/index.js"],"names":["module","exports","LoginPage","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","getFieldDecorator","this","className","onSubmit","Item","rules","required","message","prefix","type","style","color","placeholder","valuePropName","initialValue","href","htmlType","React","Component","Form","create","name"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,oC,yJCIrCC,E,2MACJC,aAAe,SAAAC,GACbA,EAAEC,iBACF,EAAKC,MAAMC,KAAKC,gBAAe,SAACC,EAAKC,GAC9BD,GACHE,QAAQC,IAAI,4BAA6BF,O,wEAIrC,IACAG,EAAsBC,KAAKR,MAAMC,KAAjCM,kBAER,OACE,yBAAKE,UAAU,cACb,kBAAC,IAAD,CAAMC,SAAUF,KAAKX,aAAcY,UAAU,cAC3C,kBAAC,IAAKE,KAAN,KACGJ,EAAkB,WAAY,CAC7BK,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,iCAF9BP,CAKC,kBAAC,IAAD,CACEQ,OACE,kBAAC,IAAD,CAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAEpCC,YAAY,eAIlB,kBAAC,IAAKR,KAAN,KACGJ,EAAkB,WAAY,CAC7BK,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,iCAF9BP,CAKC,kBAAC,IAAD,CACEQ,OACE,kBAAC,IAAD,CAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAEpCF,KAAK,WACLG,YAAY,eAIlB,kBAAC,IAAKR,KAAN,KACGJ,EAAkB,WAAY,CAC7Ba,cAAe,UACfC,cAAc,GAFfd,CAGE,kBAAC,IAAD,qBACH,uBAAGE,UAAU,oBAAoBa,KAAK,IAAtC,mBAGA,kBAAC,IAAD,CACEN,KAAK,UACLO,SAAS,SACTd,UAAU,qBAHZ,UARF,MAeK,uBAAGa,KAAK,IAAR,wB,GA3DSE,IAAMC,WAkEfC,cAAKC,OAAO,CAAEC,KAAM,cAApBF,CAAoC9B","file":"static/js/4.17f7f465.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/index.cedcce3a.less\";","import React from \"react\";\nimport \"./index.less\";\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\n\nclass LoginPage extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n      }\n    });\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <div className=\"login-page\">\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\n          <Form.Item>\n            {getFieldDecorator(\"username\", {\n              rules: [\n                { required: true, message: \"Please input your username!\" }\n              ]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                placeholder=\"Username\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator(\"password\", {\n              rules: [\n                { required: true, message: \"Please input your Password!\" }\n              ]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator(\"remember\", {\n              valuePropName: \"checked\",\n              initialValue: true\n            })(<Checkbox>Remember me</Checkbox>)}\n            <a className=\"login-form-forgot\" href=\"\">\n              Forgot password\n            </a>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              Log in\n            </Button>\n            Or <a href=\"\">register now!</a>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\nexport default Form.create({ name: \"form_login\" })(LoginPage);\n"],"sourceRoot":""}