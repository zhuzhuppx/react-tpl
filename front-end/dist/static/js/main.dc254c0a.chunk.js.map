{"version":3,"sources":["routes/helper.js","api/service/tipTool.js","api/service/helper.js","api/service/services.js","api/api.js","components/layout/Menu.js","components/layout/MainContent.js","components/layout/Message.js","components/layout/Avatar.js","components/layout/index.js","index.less","routes/index.js","components/App.js","serviceWorker.js","index.js"],"names":["RouteWithSubRoutes","route","path","render","props","component","routes","tipError","error","Toast","fail","loadingHide","hide","backGates","getToken","localStorage","getItem","getHeaders","type","token","baseUrl","axios","defaults","timeout","interceptors","request","use","config","url","some","i","indexOf","loading","Promise","reject","response","data","errorCode","apiErrorMessage","code","err","status","message","fetch","method","obj","headers","params","cache","JSON","stringify","key","value","push","formatJSON","queryString","getMenuItems","SubMenu","Menu","SideMenu","state","menuItems","a","setState","fetchMenus","height","this","style","defaultSelectedKeys","defaultOpenKeys","mode","theme","className","map","item","index","renderMenuItem","hasChildren","title","icon","name","children","subItem","indexSub","Item","to","React","Component","MainContent","console","log","MyAvatar","count","dot","user","backgroundColor","verticalAlign","size","Header","Layout","Sider","Content","PageLayout","toggle","collapsed","h","window","innerHeight","document","documentElement","clientHeight","body","trigger","collapsible","background","padding","paddingLeft","onClick","float","marginRight","Message","Avatar","margin","minHeight","module","exports","loginPage","exact","loadable","mainPage","App","router","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc254c0a.chunk.js","sourcesContent":["import {  Route } from \"react-router-dom\";\nimport React from \"react\";\n\nexport const RouteWithSubRoutes = route => {\n  return (\n    <Route\n      path={route.path}\n      render={props => <route.component {...props} routes={route.routes} />}\n    />\n  );\n};\n","import { Toast } from 'antd-mobile'\n\nexport const tipError = (error) => {\n\tToast.fail(error, 2)\n\treturn null;\n};\nexport const loadingShow = () => {\n\tToast.loading('加载中……', 0, null, true)\n};\nexport const loadingHide = () => {\n\tToast.hide()\n};\n","import { tipError, loadingShow, loadingHide } from \"./tipTool\";\nconst backGates = [\"/login/\"];\nconst toLogin = () => {\n  // window.location.href = \"/\"\n};\nconst getToken = () => {\n  return localStorage.getItem(\"token\") || \"123\";\n};\nexport const formatJSON = data => {\n  let cache = [];\n  return JSON.stringify(data, function(key, value) {\n    if (typeof value === \"object\" && value !== null) {\n      if (cache.indexOf(value) !== -1) {\n        return;\n      }\n      cache.push(value);\n    }\n    return value;\n  });\n};\nexport const getHeaders = type => {\n  switch (type) {\n    case \"json\":\n      return {\n        \"Content-Type\": \"application/json\",\n        token: getToken()\n      };\n    case \"upload\":\n      return {\n        \"Content-Type\": \"multiple/form-data\",\n        token: getToken()\n      };\n    case \"download\":\n      return {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        token: getToken()\n      };\n    case \"text\":\n      return {\n        token: getToken()\n      };\n    default:\n      return {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        token: getToken()\n      };\n  }\n};\nexport const requestInterceptorHandler = config => {\n  let { url } = config;\n  /**判断是否拦击 */\n  if (!(backGates && backGates.some(i => url.indexOf(i) > -1))) {\n    let token = getToken(\"token\");\n    if (!token) {\n      toLogin();\n      return tipError(\"未登录\");\n    }\n  }\n  loadingShow();\n  return config;\n};\nexport const requestErrorHandler = error => {\n  loadingHide();\n  return Promise.reject(error);\n};\nexport const responseInterceptorHandler = response => {\n  loadingHide();\n  let data = response.data;\n  let errorCode = data.errorCode;\n  //未登录\n  if (!!errorCode && errorCode === \"3000\") {\n    toLogin();\n    return tipError(\"未登录!\");\n  }\n  let apiErrorMessage = data.apiErrorMessage;\n  if (data.code && data.code === 1001) {\n    //后台默认的错误编码\n    loadingHide(); //loading移除\n    tipError(apiErrorMessage || \"系统错误！请稍后重试！\");\n  }\n  return response;\n};\nexport const responseErrorHadler = err => {\n  loadingHide();\n  if (err && err.response) {\n    if (err.response.status === 401) {\n      let apiErrorMessage = err.response.data.apiErrorMessage;\n      toLogin();\n      return tipError(apiErrorMessage || \"系统错误！请稍后重试！\");\n    } else {\n      return tipError(err.message);\n    }\n  }\n  return Promise.reject(err);\n};\n","import axios from 'axios';\nimport queryString from 'query-string';\nimport FileSaver from 'file-saver'\nimport {\n  formatJSON,\n  getHeaders,\n  requestInterceptorHandler,\n  responseInterceptorHandler,\n  responseErrorHadler,\n  requestErrorHandler\n} from './helper.js';\nvar baseUrl = '/api';\n\nif (process.env.NODE_ENV === 'production') {\n  baseUrl = '';\n}\naxios.defaults.timeout = 1200000;\naxios.interceptors.request.use(requestInterceptorHandler, requestErrorHandler);\naxios.interceptors.response.use(\n  responseInterceptorHandler,\n  responseErrorHadler\n);\nexport const fetch = (method, type, url, data) => {\n  let obj = {\n    url: baseUrl + url,\n    method: method || 'post',\n    headers: getHeaders(type)\n  };\n  if (obj.method === 'get') {\n    obj.params = data;\n  } else {\n    if (type === 'json') {\n      obj.data = formatJSON(data);\n    } else if (type === 'upload') {\n      obj.data = data;\n    } else {\n      obj.data = queryString.stringify(data);\n    }\n  }\n  return axios.request(obj);\n};\n/**\n * @param {*} url\n * @param {*} data\n */\nexport const downloadMe = (url, data, callback,filename) => { \n  let obj = {\n    url:baseUrl + url,\n    method: 'post',\n    data: queryString.stringify(data),\n    headers:getHeaders('download'),\n    responseType: 'blob' \n  };  \n  axios.request(obj).then(res => {    \n    let fileName = filename||decodeURI(res.headers['filename']);\n    try {\n      FileSaver.saveAs(\n        new Blob([res.data], {\n          type: \"application/octet-stream\"\n        }),\n        fileName\n      );\n    } catch (e) {\n      if (typeof console != \"undefined\") console.log(e);\n    }\n    if(callback){\n      callback();\n    }\n  }, error => {\n    console.log(error);\n    callback();\n  })\n};","import { fetch } from \"./service/services\";\n\nexport const ppx = data => fetch(\"get\", \"\", \"/mock/ppx\", data);\nexport const getMenuItems = data => fetch(\"get\", \"\", \"/mock/menu\", data);\n\n","import React from \"react\";\nimport { Menu, Icon } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { getMenuItems } from \"@/api/api\";\nconst { SubMenu } = Menu;\n/**\n * 渲染单个菜单\n * @param {参数：在router中配置的元素} item \n * @param {索引} key \n */\nconst renderMenuItem = (item, key) => {\n  if (item.hasChildren) {\n    return (\n      <SubMenu\n        key={key}\n        title={\n          <span>\n            <Icon type={item.icon} />\n            <span>{item.name}</span>\n          </span>\n        }\n      >\n        {item.children.map((subItem, indexSub) => {\n          return renderMenuItem(subItem, key + indexSub);\n        })}\n      </SubMenu>\n    );\n  }\n  return (\n    <Menu.Item key={key}>\n      <Icon type={item.icon} />\n      <span>\n        <Link to={item.path}>{item.name}</Link>\n      </span>\n    </Menu.Item>\n  );\n};\n/**\n * 菜单类\n */\nclass SideMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuItems: []\n    };\n  }\n  componentDidMount() {\n    const fetchMenus = async () => {\n      let data = await getMenuItems();\n      data = data.data.data;\n      this.setState({ menuItems: data });\n    };\n    fetchMenus();\n  }\n  render() {\n    let height = this.props.height;\n    const style = {\n      height: `${height}px`\n    };\n    const menuItems = this.state.menuItems;\n    return (\n      <Menu\n        defaultSelectedKeys={[`0`]}\n        defaultOpenKeys={[\"0\"]}\n        mode=\"inline\"\n        theme=\"dark\"\n        className=\"app-menu\"\n        style={style}\n      >\n        {menuItems.map((item, index) => {\n          return renderMenuItem(item, index);\n        })}\n      </Menu>\n    );\n  }\n}\nexport default SideMenu;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport {RouteWithSubRoutes} from \"@/routes/helper.js\"\nclass MainContent extends React.Component {\n  render() {\n      const routes = this.props.routes;\n      console.log(routes);\n      \n    return (\n      <div className=\"main\">\n        <Switch>\n          {routes.map((route, index) => (\n            <RouteWithSubRoutes key={index} {...route} />\n          ))}\n        </Switch>\n      </div>\n    );\n  }\n}\nexport default MainContent;\n","import React from \"react\";\nimport { Badge, Icon } from \"antd\";\n\nclass MyAvatar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <Badge count={6} dot>\n        <Icon type=\"notification\" />\n      </Badge>\n    );\n  }\n}\nexport default MyAvatar;\n","import React from \"react\";\nimport { Avatar } from \"antd\";\n\nclass MyAvatar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { user: { name: \"ppx\" } };\n  }\n  render() {\n    return (\n      <Avatar\n        style={{ backgroundColor: \"#f56a00\", verticalAlign: \"middle\" }}\n        size=\"large\"\n      >\n        {this.state.user.name}\n      </Avatar>\n    );\n  }\n}\nexport default MyAvatar;\n","import React from \"react\";\n\nimport { Layout, Icon } from \"antd\";\nimport Menu from \"./Menu\";\nimport MainContent from \"./MainContent\";\nimport Message from \"./Message\";\nimport Avatar from \"./Avatar\";\nconst { Header, Sider, Content } = Layout;\n\nclass PageLayout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: false,\n      height: 0\n    };\n  }\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n  componentDidMount() {\n    let h =\n      window.innerHeight ||\n      document.documentElement.clientHeight ||\n      document.body.clientHeight - 54;\n    this.setState({ height: h });\n  }\n  render() {\n    let height = this.state.height;\n    return (\n      <Layout className=\"App\">\n        <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n          <Menu></Menu>\n        </Sider>\n        <Layout>\n          <Header style={{ background: \"#fff\", padding: 0 }}>\n            <Icon\n              className=\"trigger\"\n              style={{ paddingLeft: 16 }}\n              type={this.state.collapsed ? \"menu-unfold\" : \"menu-fold\"}\n              onClick={this.toggle}\n            />\n            <span style={{ float: \"right\", marginRight: 16 }}>\n              <span style={{ marginRight: 16 }}>\n                <Message></Message>\n              </span>\n              <span>\n                <Avatar></Avatar>\n              </span>\n            </span>\n          </Header>\n          <Content\n            style={{\n              margin: \"24px 16px\",\n              padding: 24,\n              background: \"#fff\",\n              minHeight: height\n            }}\n          >\n            <MainContent routes={this.props.routes}></MainContent>\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default PageLayout;\n","module.exports = __webpack_public_path__ + \"static/media/index.9b9dd368.less\";","import loadable from \"@loadable/component\";\n\nexport default {\n  loginPage: {\n    path: \"/\",\n    exact: true,\n    component: loadable(() => import(`@/pages/login/index.js`))\n  },\n  mainPage: {\n    path: \"/main\",\n    exact: true,\n    component: loadable(() => import(`@/components/layout/index.js`)),\n    routes: [\n      {\n        path: \"/main/ppx\",\n        exact: true,\n        component: loadable(() => import(`@/pages/ppx/index.js`))\n      },\n      {\n        path: \"/main/ppx/01\",\n        exact: true,\n        component: loadable(() => import(`@/pages/ppx/01/index.js`))\n      }\n    ]\n  }\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport router from \"@/routes/index.js\";\nimport PageLayout from \"./layout/index\";\nclass App extends React.Component {\n  render() {\n    const { loginPage, mainPage } = router;\n    return (\n      <Router>\n        <Switch>\n          <Route\n            path={loginPage.path}\n            render={props => <loginPage.component {...props} />}\n          />\n          <Route\n            path={mainPage.path}\n            render={props => <PageLayout {...props} routes={mainPage.routes} />}\n          />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.less\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}